package com.leasing.popular.wf.table.negocio.persona;

//Generated 31/01/2010 08:17:18 AM by Hibernate Tools 3.2.4.GA

 
import java.math.BigDecimal;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.validator.Email;
import org.hibernate.validator.Pattern;

import com.leasing.popular.wf.table.parametros.valores.MpaValores;

/**
 * McomPersonas generated by hbm2java
 */
@Entity
@Table(name = "MCOM_PERSONAS")
public class McomPersonas implements java.io.Serializable {

	private McomPersonasId id;
	private MpaValores mpaValoresByFkPersonasValoresPersonas1;
	private MpaValores mpaValoresByFkPersonasValoresCiudad;
	private MpaValores mpaValoresByFkPersonasValoresTipoid;
	private String perNombres;
	private String perApellidos;
	private BigDecimal perTelContacto1;
	private BigDecimal perTelContacto2;
	private String perDireccion1;
	private String perDireccion2;
	private String perCorreo;
	private String perUrl;
	private String perObservaciones;

	public McomPersonas() {
	}
	
	public McomPersonas(McomPersonasId id) {
		this.id = id;
	}

	public McomPersonas(McomPersonasId id,
			MpaValores mpaValoresByFkPersonasValoresPersonas1,
			MpaValores mpaValoresByFkPersonasValoresCiudad,
			MpaValores mpaValoresByFkPersonasValoresTipoid, String perNombres,
			String perApellidos, BigDecimal perTelContacto1,
			String perDireccion1, String perCorreo) {
		this.id = id;
		this.mpaValoresByFkPersonasValoresPersonas1 = mpaValoresByFkPersonasValoresPersonas1;
		this.mpaValoresByFkPersonasValoresCiudad = mpaValoresByFkPersonasValoresCiudad;
		this.mpaValoresByFkPersonasValoresTipoid = mpaValoresByFkPersonasValoresTipoid;
		this.perNombres = perNombres;
		this.perApellidos = perApellidos;
		this.perTelContacto1 = perTelContacto1;
		this.perDireccion1 = perDireccion1;
		this.perCorreo = perCorreo;
	}

	public McomPersonas(McomPersonasId id,
			MpaValores mpaValoresByFkPersonasValoresPersonas1,
			MpaValores mpaValoresByFkPersonasValoresCiudad,
			MpaValores mpaValoresByFkPersonasValoresTipoid, String perNombres,
			String perApellidos, BigDecimal perTelContacto1,
			BigDecimal perTelContacto2, String perDireccion1,
			String perDireccion2, String perCorreo, String perUrl,
			String perObservaciones) {
		this.id = id;
		this.mpaValoresByFkPersonasValoresPersonas1 = mpaValoresByFkPersonasValoresPersonas1;
		this.mpaValoresByFkPersonasValoresCiudad = mpaValoresByFkPersonasValoresCiudad;
		this.mpaValoresByFkPersonasValoresTipoid = mpaValoresByFkPersonasValoresTipoid;
		this.perNombres = perNombres;
		this.perApellidos = perApellidos;
		this.perTelContacto1 = perTelContacto1;
		this.perTelContacto2 = perTelContacto2;
		this.perDireccion1 = perDireccion1;
		this.perDireccion2 = perDireccion2;
		this.perCorreo = perCorreo;
		this.perUrl = perUrl;
		this.perObservaciones = perObservaciones;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "perIdentificacion", column = @Column(name = "PER_IDENTIFICACION", nullable = false, length = 15)),
			@AttributeOverride(name = "perTipoIdentificacion", column = @Column(name = "PER_TIPO_IDENTIFICACION", nullable = false, precision = 22, scale = 0)),
			@AttributeOverride(name = "perParaTipoId", column = @Column(name = "PER_PARA_TIPO_ID", nullable = false, precision = 22, scale = 0)) })
	public McomPersonasId getId() {
		return this.id;
	}

	public void setId(McomPersonasId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumns( {
			@JoinColumn(name = "PER_TIPO_PERSONA1", referencedColumnName = "VAR_CODIGO", nullable = false),
			@JoinColumn(name = "PER_PARA_TIPO_PERSONA1", referencedColumnName = "PAR_CODIGO", nullable = false) })
	public MpaValores getMpaValoresByFkPersonasValoresPersonas1() {
		return this.mpaValoresByFkPersonasValoresPersonas1;
	}

	public void setMpaValoresByFkPersonasValoresPersonas1(
			MpaValores mpaValoresByFkPersonasValoresPersonas1) {
		this.mpaValoresByFkPersonasValoresPersonas1 = mpaValoresByFkPersonasValoresPersonas1;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumns( {
			@JoinColumn(name = "PER_CIUDAD", referencedColumnName = "VAR_CODIGO", nullable = false),
			@JoinColumn(name = "PER_PARA_CIUDAD", referencedColumnName = "PAR_CODIGO", nullable = false) })
	public MpaValores getMpaValoresByFkPersonasValoresCiudad() {
		return this.mpaValoresByFkPersonasValoresCiudad;
	}

	public void setMpaValoresByFkPersonasValoresCiudad(
			MpaValores mpaValoresByFkPersonasValoresCiudad) {
		this.mpaValoresByFkPersonasValoresCiudad = mpaValoresByFkPersonasValoresCiudad;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumns( {
			@JoinColumn(name = "PER_TIPO_IDENTIFICACION", referencedColumnName = "VAR_CODIGO", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "PER_PARA_TIPO_ID", referencedColumnName = "PAR_CODIGO", nullable = false, insertable = false, updatable = false) })
	public MpaValores getMpaValoresByFkPersonasValoresTipoid() {
		return this.mpaValoresByFkPersonasValoresTipoid;
	}

	public void setMpaValoresByFkPersonasValoresTipoid(
			MpaValores mpaValoresByFkPersonasValoresTipoid) {
		this.mpaValoresByFkPersonasValoresTipoid = mpaValoresByFkPersonasValoresTipoid;
	}

	
    @Pattern(regex="[a-z·ÈÌÛ˙ÒA-Z¡…Õ”⁄—]+\\s*[a-z·ÈÌÛ˙ÒA-Z¡…Õ”⁄—]*\\s*",message="DigÌte un apellido valido")
	@Column(name = "PER_NOMBRES", nullable = false, length = 20)
	public String getPerNombres() {
		return this.perNombres;
	}

	/**
	 * @param  perNombres
	 * @uml.property  name="perNombres"
	 */
	public void setPerNombres(String perNombres) {
		this.perNombres = perNombres==null?perNombres:perNombres.trim().toUpperCase();
	}

	/**
	 * @return
	 * @uml.property  name="perApellidos"
	 */
	@Pattern(regex="[a-z·ÈÌÛ˙ÒA-Z¡…Õ”⁄—]+\\s*[a-z·ÈÌÛ˙ÒA-Z¡…Õ”⁄—]*\\s*",message="DigÌte un apellido valido")
	@Column(name = "PER_APELLIDOS", nullable = false, length = 20)
	public String getPerApellidos() {
		return this.perApellidos;
	}

	/**
	 * @param  perApellidos
	 * @uml.property  name="perApellidos"
	 */
	public void setPerApellidos(String perApellidos) {
		this.perApellidos = perApellidos==null?perApellidos:perApellidos.trim().toUpperCase();
	}

	/**
	 * @return
	 * @uml.property  name="perTelContacto1"
	 */
	@Column(name = "PER_TEL_CONTACTO1", nullable = false, precision = 22, scale = 0)
	public BigDecimal getPerTelContacto1() {
		return this.perTelContacto1;
	}

	/**
	 * @param  perTelContacto1
	 * @uml.property  name="perTelContacto1"
	 */
	public void setPerTelContacto1(BigDecimal perTelContacto1) {
		this.perTelContacto1 = perTelContacto1;
	}

	/**
	 * @return
	 * @uml.property  name="perTelContacto2"
	 */
	@Column(name = "PER_TEL_CONTACTO2", precision = 22, scale = 0)
	public BigDecimal getPerTelContacto2() {
		return this.perTelContacto2;
	}

	/**
	 * @param  perTelContacto2
	 * @uml.property  name="perTelContacto2"
	 */
	public void setPerTelContacto2(BigDecimal perTelContacto2) {
		this.perTelContacto2 = perTelContacto2;
	}

	/**
	 * @return
	 * @uml.property  name="perDireccion1"
	 */
	@Column(name = "PER_DIRECCION1", nullable = false, length = 30)
	public String getPerDireccion1() {
		return this.perDireccion1;
	}

	/**
	 * @param  perDireccion1
	 * @uml.property  name="perDireccion1"
	 */
	public void setPerDireccion1(String perDireccion1) {
		this.perDireccion1 = perDireccion1==null?perDireccion1:perDireccion1.trim().toUpperCase();
	}

	@Column(name = "PER_DIRECCION2", length = 100)
	public String getPerDireccion2() {
		return this.perDireccion2;
	}

	public void setPerDireccion2(String perDireccion2) {
		this.perDireccion2 = perDireccion2==null?perDireccion2:perDireccion2.trim().toUpperCase();
	}

	//@Email       
	@Column(name = "PER_CORREO", length = 100)
	public String getPerCorreo() {
		return this.perCorreo;
	}

	
	public void setPerCorreo(String perCorreo) {
		this.perCorreo = perCorreo==null?perCorreo:perCorreo.trim().toUpperCase();
	}

	
	
	@Pattern(regex="(www|WWW)*.*[A-Za-z0-9]*.*[A-Za-z]*",message="DirreciÛn web no valida")
	@Column(name = "PER_URL", length = 30)
	public String getPerUrl() {
		return this.perUrl;
	}

    public void setPerUrl(String perUrl) {
		this.perUrl = perUrl==null?perUrl:perUrl.trim().toUpperCase();
	}

	@Column(name = "PER_OBSERVACIONES", length = 50)
	public String getPerObservaciones() {
		return this.perObservaciones;
	}

    public void setPerObservaciones(String perObservaciones) {
		this.perObservaciones = perObservaciones==null?perObservaciones:perObservaciones.trim().toUpperCase();
	}

}
